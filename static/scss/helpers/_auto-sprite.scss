// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$bulb-name: 'bulb';
$bulb-x: 6962px;
$bulb-y: 23px;
$bulb-offset-x: -6962px;
$bulb-offset-y: -23px;
$bulb-width: 11px;
$bulb-height: 16px;
$bulb-total-width: 6994px;
$bulb-total-height: 3620px;
$bulb-image: '/images/sprite/auto-sprite.png';
$bulb: (6962px, 23px, -6962px, -23px, 11px, 16px, 6994px, 3620px, '/images/sprite/auto-sprite.png', 'bulb', );
$cxwz-name: 'cxwz';
$cxwz-x: 6862px;
$cxwz-y: 49px;
$cxwz-offset-x: -6862px;
$cxwz-offset-y: -49px;
$cxwz-width: 90px;
$cxwz-height: 31px;
$cxwz-total-width: 6994px;
$cxwz-total-height: 3620px;
$cxwz-image: '/images/sprite/auto-sprite.png';
$cxwz: (6862px, 49px, -6862px, -49px, 90px, 31px, 6994px, 3620px, '/images/sprite/auto-sprite.png', 'cxwz', );
$datepick-icon-name: 'datepickIcon';
$datepick-icon-x: 6983px;
$datepick-icon-y: 0px;
$datepick-icon-offset-x: -6983px;
$datepick-icon-offset-y: 0px;
$datepick-icon-width: 11px;
$datepick-icon-height: 13px;
$datepick-icon-total-width: 6994px;
$datepick-icon-total-height: 3620px;
$datepick-icon-image: '/images/sprite/auto-sprite.png';
$datepick-icon: (6983px, 0px, -6983px, 0px, 11px, 13px, 6994px, 3620px, '/images/sprite/auto-sprite.png', 'datepickIcon', );
$error400-name: 'error400';
$error400-x: 6662px;
$error400-y: 90px;
$error400-offset-x: -6662px;
$error400-offset-y: -90px;
$error400-width: 190px;
$error400-height: 80px;
$error400-total-width: 6994px;
$error400-total-height: 3620px;
$error400-image: '/images/sprite/auto-sprite.png';
$error400: (6662px, 90px, -6662px, -90px, 190px, 80px, 6994px, 3620px, '/images/sprite/auto-sprite.png', 'error400', );
$error404-name: 'error404';
$error404-x: 6462px;
$error404-y: 180px;
$error404-offset-x: -6462px;
$error404-offset-y: -180px;
$error404-width: 190px;
$error404-height: 80px;
$error404-total-width: 6994px;
$error404-total-height: 3620px;
$error404-image: '/images/sprite/auto-sprite.png';
$error404: (6462px, 180px, -6462px, -180px, 190px, 80px, 6994px, 3620px, '/images/sprite/auto-sprite.png', 'error404', );
$error409-name: 'error409';
$error409-x: 6062px;
$error409-y: 360px;
$error409-offset-x: -6062px;
$error409-offset-y: -360px;
$error409-width: 190px;
$error409-height: 90px;
$error409-total-width: 6994px;
$error409-total-height: 3620px;
$error409-image: '/images/sprite/auto-sprite.png';
$error409: (6062px, 360px, -6062px, -360px, 190px, 90px, 6994px, 3620px, '/images/sprite/auto-sprite.png', 'error409', );
$error500-name: 'error500';
$error500-x: 6262px;
$error500-y: 270px;
$error500-offset-x: -6262px;
$error500-offset-y: -270px;
$error500-width: 190px;
$error500-height: 80px;
$error500-total-width: 6994px;
$error500-total-height: 3620px;
$error500-image: '/images/sprite/auto-sprite.png';
$error500: (6262px, 270px, -6262px, -270px, 190px, 80px, 6994px, 3620px, '/images/sprite/auto-sprite.png', 'error500', );
$sprite-name: 'sprite';
$sprite-x: 0px;
$sprite-y: 460px;
$sprite-offset-x: 0px;
$sprite-offset-y: -460px;
$sprite-width: 6052px;
$sprite-height: 3160px;
$sprite-total-width: 6994px;
$sprite-total-height: 3620px;
$sprite-image: '/images/sprite/auto-sprite.png';
$sprite: (0px, 460px, 0px, -460px, 6052px, 3160px, 6994px, 3620px, '/images/sprite/auto-sprite.png', 'sprite', );
$spritesheet-width: 6994px;
$spritesheet-height: 3620px;
$spritesheet-image: '/images/sprite/auto-sprite.png';
$spritesheet-sprites: ($bulb, $cxwz, $datepick-icon, $error400, $error404, $error409, $error500, $sprite, );
$spritesheet: (6994px, 3620px, '/images/sprite/auto-sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
