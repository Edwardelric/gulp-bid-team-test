/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$bulb-name: 'bulb';
$bulb-x: 8034px;
$bulb-y: 33px;
$bulb-offset-x: -8034px;
$bulb-offset-y: -33px;
$bulb-width: 11px;
$bulb-height: 16px;
$bulb-total-width: 8076px;
$bulb-total-height: 4220px;
$bulb-image: 'sprite.png';
$bulb: (8034px, 33px, -8034px, -33px, 11px, 16px, 8076px, 4220px, 'sprite.png', 'bulb', );
$cxwz-name: 'cxwz';
$cxwz-x: 7924px;
$cxwz-y: 69px;
$cxwz-offset-x: -7924px;
$cxwz-offset-y: -69px;
$cxwz-width: 90px;
$cxwz-height: 31px;
$cxwz-total-width: 8076px;
$cxwz-total-height: 4220px;
$cxwz-image: 'sprite.png';
$cxwz: (7924px, 69px, -7924px, -69px, 90px, 31px, 8076px, 4220px, 'sprite.png', 'cxwz', );
$datepick-icon-name: 'datepickIcon';
$datepick-icon-x: 8065px;
$datepick-icon-y: 0px;
$datepick-icon-offset-x: -8065px;
$datepick-icon-offset-y: 0px;
$datepick-icon-width: 11px;
$datepick-icon-height: 13px;
$datepick-icon-total-width: 8076px;
$datepick-icon-total-height: 4220px;
$datepick-icon-image: 'sprite.png';
$datepick-icon: (8065px, 0px, -8065px, 0px, 11px, 13px, 8076px, 4220px, 'sprite.png', 'datepickIcon', );
$error400-name: 'error400';
$error400-x: 7714px;
$error400-y: 120px;
$error400-offset-x: -7714px;
$error400-offset-y: -120px;
$error400-width: 190px;
$error400-height: 80px;
$error400-total-width: 8076px;
$error400-total-height: 4220px;
$error400-image: 'sprite.png';
$error400: (7714px, 120px, -7714px, -120px, 190px, 80px, 8076px, 4220px, 'sprite.png', 'error400', );
$error404-name: 'error404';
$error404-x: 7504px;
$error404-y: 220px;
$error404-offset-x: -7504px;
$error404-offset-y: -220px;
$error404-width: 190px;
$error404-height: 80px;
$error404-total-width: 8076px;
$error404-total-height: 4220px;
$error404-image: 'sprite.png';
$error404: (7504px, 220px, -7504px, -220px, 190px, 80px, 8076px, 4220px, 'sprite.png', 'error404', );
$error409-name: 'error409';
$error409-x: 7084px;
$error409-y: 420px;
$error409-offset-x: -7084px;
$error409-offset-y: -420px;
$error409-width: 190px;
$error409-height: 90px;
$error409-total-width: 8076px;
$error409-total-height: 4220px;
$error409-image: 'sprite.png';
$error409: (7084px, 420px, -7084px, -420px, 190px, 90px, 8076px, 4220px, 'sprite.png', 'error409', );
$error500-name: 'error500';
$error500-x: 7294px;
$error500-y: 320px;
$error500-offset-x: -7294px;
$error500-offset-y: -320px;
$error500-width: 190px;
$error500-height: 80px;
$error500-total-width: 8076px;
$error500-total-height: 4220px;
$error500-image: 'sprite.png';
$error500: (7294px, 320px, -7294px, -320px, 190px, 80px, 8076px, 4220px, 'sprite.png', 'error500', );
$sprite-name: 'sprite';
$sprite-x: 0px;
$sprite-y: 530px;
$sprite-offset-x: 0px;
$sprite-offset-y: -530px;
$sprite-width: 7064px;
$sprite-height: 3690px;
$sprite-total-width: 8076px;
$sprite-total-height: 4220px;
$sprite-image: 'sprite.png';
$sprite: (0px, 530px, 0px, -530px, 7064px, 3690px, 8076px, 4220px, 'sprite.png', 'sprite', );
$spritesheet-width: 8076px;
$spritesheet-height: 4220px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($bulb, $cxwz, $datepick-icon, $error400, $error404, $error409, $error500, $sprite, );
$spritesheet: (8076px, 4220px, 'sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
